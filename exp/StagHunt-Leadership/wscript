#! /usr/bin/env python

import sferes;

def build(bld):
		cxxflags_kdtree = \
				bld.get_env()['CXXFLAGS']\
				+ ['-I.'] \
				+ ['-DLIBSSRCKDTREE_HAVE_BOOST'] \
				+ ['-std=c++0x'] \
				+ ['-m32']

#    lz = bld.new_task_gen('cxx', 'staticlib')
#    lz.source = 'fastlz.cpp'
#    lz.target = 'lz'

#    bld.get_env()['LIB_BZIP2'] = 'bzip2'
#    bld.get_env()['CPPPATH_BZIP2'] = 'bzlib2/include/'
#    bld.get_env()['LIBPATH_BZIP2'] = 'bzlib2/lib/'

#bz = bld.new_task_gen('cxx', 'staticlib')
		#bz.source = 'bzlib2/bzlib.cpp'
		#bz.target = 'bz'

		sferes.create_variants(bld,
													 source='StagHunt.cpp',
													 uselib_local = 'sferes2 fastsim_multi',
#                           uselib = 'EIGEN2 TBB',
													 uselib = 'EIGEN2 SDL FF BOOST_GRAPH TBB',
													 target = 'StagHunt',
#                           json = 'StagHuntExp3.json',
													 variants = [
													 							# 'SETTING15 DOUBLE_NN DECISION_THRESHOLD BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING BSTAG250 POS_CLOSE',
													 							# 'SETTING15 PARAMS10 DOUBLE_NN BINARY_DIFF BSTAG250 POS_CLOSE',
													 							# 'SETTING15 PARAMS10 DOUBLE_NN BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING DUPLICATION DUP10 BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING DUPLICATION DUP5 BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING DUPLICATION DUP1 BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING ERROR_CHOICE ERROR10 BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING ERROR_CHOICE ERROR5 BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING ERROR_CHOICE ERROR1 BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING DUPLOAD BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING DUPLOAD DIFFLOAD BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING DIFFSTART BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN DECISION_MAPPING CHOICE_ORDERED BSTAG250 POS_CLOSE'
													 							# 'SETTING15 PARAMS10 DOUBLE_NN DECISION_THRESHOLD BSTAG250 POS_CLOSE'

													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING NOISE_CHOICE BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING ERROR_CHOICE BSTAG250 POS_CLOSE',
													 							# 'SETTING15 DOUBLE_NN BINARY_DIFF DECISION_MAPPING STRONG_MUTATION BSTAG250 POS_CLOSE',
													 							'SETTING15 DOUBLE_NN DECISION_MAPPING CHOICE_ORDERED FORCE_LEADER BSTAG250 POS_CLOSE',
													 							'SETTING15 DOUBLE_NN DECISION_THRESHOLD CHOICE_ORDERED FORCE_LEADER BSTAG250 POS_CLOSE',
													 							'SETTING15 DOUBLE_NN DECISION_THRESHOLD CHOICE_ORDERED BSTAG250 POS_CLOSE',

													 							# 'CONTROL3 PARAMS10 BSTAG250 SSTAG50 POS_CLOSE',

													 							# 'CONTROL1 BSTAG250 POS_CLOSE',
													 							# 'CONTROL1 BSTAG250 POS_CLOSE ALTRUISM',
													 							# 'CONTROL1 COEVO BSTAG250 POS_CLOSE',
																			])

																			 
#def build(bld):
#    obj.source = 'StagHuntExp1.cpp'
#    obj.includes = '. ../../'
#    obj.uselib_local = 'sferes2'
#    obj.uselib = ''
#    obj.target = 'StagHuntExp1'
#    obj.uselib_local = 'sferes2'
