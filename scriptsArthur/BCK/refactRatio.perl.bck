#!/usr/bin/perl

use strict;
use Cwd "abs_path";
use File::Basename;

my $dossier = 0;
my $numArg = 0;
my $meanFromEval = 10000;
my $hareRatio = 0;
my $bStagRatio = 0;

while($numArg < scalar(@ARGV))
{
	if($ARGV[$numArg] =~ "d")
	{
		$numArg++;
		$dossier = $ARGV[$numArg];
	}
	else
	{
		if($ARGV[$numArg] =~ /^-hr$/)
		{
			$hareRatio = 1;
		}
		else
		{
			if($ARGV[$numArg] =~ "-h")
			{
				&printHelp();
			}
			else
			{
				if($ARGV[$numArg] =~ "-b")
				{
					$bStagRatio = 1;
				}
			}
		}
	}

	$numArg++;
}

opendir DIR, "$dossier" or die $!;
my @fichiers = grep {/^[^.]/} readdir(DIR);
closedir DIR;

my %tabMeansHares = ();
my %tabMeansSStagsSolo = ();
my %tabMeansSStagsDuo = ();
my %tabMeansBStags = ();
my $nbRuns = 0;

foreach my $fichier (@fichiers)
{
	if($fichier =~ /^refactData_run(\d*).dat$/)
	{
		my $numRun = $1;

		open FILEIN, "<$dossier/$fichier" or die $!;
		
		my $minStags = 10000;
		my $minHares = 10000;
		my $minBStags = 10000;
		while (my $ligne = <FILEIN>)
		{
			chomp $ligne;

			if($ligne =~ /^(\d*),[^,]*,([^,])*,([^,]*),([^,]*),([^,]*),[^,]*,[^,]*,([^,]*)$/)
			{
				my $eval = $1;
				my $nbHares = $2;
				my $nbSStagsDuo = $3;
				my $nbSStagsSolo = $4;
				my $nbBStags = $6;
				
				if(($nbSStagsSolo < $minStags) && ($nbSStagsSolo > 0))
				{
					$minStags = $nbSStagsSolo;
				}

				if(($nbHares < $minHares) && ($nbHares > 0))
				{
					$minHares = $nbHares;
				}

				if(($nbBStags < $minBStags) && ($nbBStags > 0))
				{
					$minBStags = $nbBStags;
				}
			}
		}

		if($minStags == 10000)
		{
			$minStags = 0.1;
		}
		if($minHares == 10000)
		{
			$minHares = 0.1;
		}
		if($minBStags == 10000)
		{
			$minBStags = 0.1;
		}
		
		close FILEIN;

		open FILEIN, "<$dossier/$fichier" or die $!;
		open FILEOUT, ">$dossier/refactDataRatio_run$numRun.dat";

		print FILEOUT "Evaluation,RatioHares,RatioSStags,RatioSStagsSolo,RatioSStagsDuo,RatioBStags\n";

		while (my $ligne = <FILEIN>)
		{
			chomp $ligne;

			if($ligne =~ /^(\d*),[^,]*,([^,]*),([^,]*),([^,]*),([^,]*),[^,]*,[^,]*,([^,]*)$/)
			{
				my $eval = $1;
				my $nbHares = $2;
				my $nbSStagsDuo = $3;
				my $nbSStagsSolo = $4;
				my $nbSStags = $5;
				my $nbBStags = $6;
				my $ratioHares = 0;
				my $ratioSStags = 0;
				my $ratioBStags = 0;
				my $ratioSStagsSolo = 0;
				my $ratioSStagsDuo = 0;

				if(1 == $hareRatio)
				{
					my $totalPreys = $nbHares + $nbSStags;

					if($totalPreys != 0)
					{
						$ratioHares = $nbHares/$totalPreys;
						$ratioSStags = $nbSStags/$totalPreys;
					}
				}
				else
				{
					if(1 == $bStagRatio)
					{
						my $totalPreys = $nbSStags + $nbBStags;

						if($totalPreys != 0)
						{
							$ratioSStags = $nbSStags/$totalPreys;
							$ratioBStags = $nbBStags/$totalPreys;
						}
					}
					else
					{
						my $totalPreys = $nbSStagsSolo + $nbSStagsDuo;

						if($totalPreys != 0)
						{
							$ratioSStagsSolo = $nbSStagsSolo/$totalPreys;
							$ratioSStagsDuo = $nbSStagsDuo/$totalPreys;
						}
					}
				}

				print FILEOUT "$eval,$ratioHares,$ratioSStags,$ratioSStagsSolo,$ratioSStagsDuo,$ratioBStags\n";
			
				if(!exists($tabMeansHares{$eval}))
				{
					$tabMeansHares{$eval} = $nbHares;
				}
				else
				{
					$tabMeansHares{$eval} = $tabMeansHares{$eval} + $nbHares;
				}
			
				if(!exists($tabMeansSStagsSolo{$eval}))
				{
					$tabMeansSStagsSolo{$eval} = $nbSStagsSolo;
				}
				else
				{
					$tabMeansSStagsSolo{$eval} = $tabMeansSStagsSolo{$eval} + $nbSStagsSolo;
				}

				if(!exists($tabMeansSStagsDuo{$eval}))
				{
					$tabMeansSStagsDuo{$eval} = $nbSStagsDuo;
				}
				else
				{
					$tabMeansSStagsDuo{$eval} = $tabMeansSStagsDuo{$eval} + $nbSStagsDuo;
				}
			
				if(!exists($tabMeansBStags{$eval}))
				{
					$tabMeansBStags{$eval} = $nbBStags;
				}
				else
				{
					$tabMeansBStags{$eval} = $tabMeansBStags{$eval} + $nbBStags;
				}
			}

		}

		close FILEOUT;
		close FILEIN;

		$nbRuns++;
	}
}

foreach my $eval (keys(%tabMeansHares))
{
	$tabMeansHares{$eval} = $tabMeansHares{$eval}/$nbRuns;
}

foreach my $eval (keys(%tabMeansSStagsSolo))
{
	$tabMeansSStagsSolo{$eval} = $tabMeansSStagsSolo{$eval}/$nbRuns;
}

foreach my $eval (keys(%tabMeansSStagsDuo))
{
	$tabMeansSStagsDuo{$eval} = $tabMeansSStagsDuo{$eval}/$nbRuns;
}

foreach my $eval (keys(%tabMeansBStags))
{
	$tabMeansBStags{$eval} = $tabMeansBStags{$eval}/$nbRuns;
}

my @sortHares = sort {$b <=> $a} keys(%tabMeansHares);
my @sortSStagsSolo = sort {$b <=> $a} keys(%tabMeansSStagsSolo);
my @sortSStagsDuo = sort {$b <=> $a} keys(%tabMeansSStagsDuo);
my @sortBStags = sort {$b <=> $a} keys(%tabMeansBStags);

my $cpt = 0;
my $nbEvals = 0;
my $meanHares = 0;
my $ecartEvals = 1000;
if(scalar(@sortHares) > 0)
{
	$ecartEvals = @sortHares[0] - @sortHares[1];
}
while ($cpt < scalar(@sortHares) && $nbEvals <= $meanFromEval)
{
	my $eval = $sortHares[$cpt];

	$meanHares += $tabMeansHares{$eval};
	
	$nbEvals += $ecartEvals;
	$cpt++;
}
$meanHares = $meanHares/$cpt;

$cpt = 0;
$nbEvals = 0;
my $meanSStagsSolo = 0;
if(scalar(@sortSStagsSolo) > 0)
{
	$ecartEvals = @sortSStagsSolo[0] - @sortSStagsSolo[1];
}
while ($cpt < scalar(@sortSStagsSolo) && $nbEvals <= $meanFromEval)
{
	my $eval = $sortSStagsSolo[$cpt];

	$meanSStagsSolo += $tabMeansSStagsSolo{$eval};

	$nbEvals += $ecartEvals;
	$cpt++;
}
$meanSStagsSolo = $meanSStagsSolo/$cpt;

$cpt = 0;
$nbEvals = 0;
my $meanSStagsDuo = 0;
if(scalar(@sortSStagsDuo) > 0)
{
	$ecartEvals = @sortSStagsDuo[0] - @sortSStagsDuo[1];
}
while ($cpt < scalar(@sortSStagsDuo) && $nbEvals <= $meanFromEval)
{
	my $eval = $sortSStagsDuo[$cpt];

	$meanSStagsDuo += $tabMeansSStagsDuo{$eval};

	$nbEvals += $ecartEvals;
	$cpt++;
}
$meanSStagsDuo = $meanSStagsDuo/$cpt;

my $meanSStags = $meanSStagsDuo + $meanSStagsSolo;

$cpt = 0;
$nbEvals = 0;
my $meanBStags = 0;
if(scalar(@sortBStags) > 0)
{
	$ecartEvals = @sortBStags[0] - @sortBStags[1];
}
while ($cpt < scalar(@sortBStags) && $nbEvals <= $meanFromEval)
{
	my $eval = $sortBStags[$cpt];

	$meanBStags += $tabMeansBStags{$eval};

	$nbEvals += $ecartEvals;
	$cpt++;
}
$meanBStags = $meanBStags/$cpt;

open FILEOUT, ">$dossier/refactMeans.dat" or die $!;

print FILEOUT "MeanHares,MeanSStags,MeanSStagsSolo,MeanSStagsDuo,MeanBStags\n";
print FILEOUT "$meanHares,$meanSStags,$meanSStagsSolo,$meanSStagsDuo,$meanBStags\n";

close FILEOUT;

sub printHelp()
{
	print "Usage : ./refactRatio.perl -d FilesDirectory [-hr] [-b] [-h]\n";
	print "\t-d : Directory with all the files to compute\n";
	print "\t-hr : Computes the ratio of hares and stags hunted. By default, computes the ratio of stags hunted cooperatively and stags hunted alone\n";
	print "\t-b : Computes the ratio of big and small stags hunted. By default, computes the ratio of stags hunted cooperatively and stags hunted alone\n";
	print "\t-h : Prints this help\n";
	exit;
}
